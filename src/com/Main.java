package com;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;

public class Main {
    public static void main(String args[]) throws FileNotFoundException {
        // Oompa Loompa ASCII art
        System.out.println(".............  .........     ((#%&&&&%%%%######(####(((#((#############/*......................................................................................\n" +
                "............   ..   .....    ((#%%&&&&%%%######(#(#(#(#(((/////(//////(////****,,..............................................................................\n" +
                "...............              /(#%&&&&&&%%##(//******************///((////((((((((//,...........................................................................\n" +
                ".................            */(%%%%###((///*/****************////((((##(((((((//(/,...........................................................................\n" +
                "             ..             .#(#%&%%%##((/////*/**********/////((###((((##%%%##(((,............................................................................\n" +
                "                             /(#%%%%%#((//////*///(//////((###(###(//(#((/%&%###/..............................................................................\n" +
                "                    ,***(%(((##%%%%%#%%%%%##((///(((#######(*,,,,,,,,*/(***(##((///,...........................................................................\n" +
                ".................   (###(((((/((((((((((((((((##%%%&&#*.......,,,,,,,,*(////(##((//**..........................................................................\n" +
                ".       ........    ..#&&&&&&&&&&&&&&&&&&&&&@&&#/*,............,,,,,,,*(#(#///(/((/*//*,.......................................................................\n" +
                "                  .,,*/#(%@@@@@@@@@@@@@@&#(**,,..........  ....,,,,,,,,(#&%##(#/###(*/*/.......................................................................\n" +
                ".....             ,,*(%%%%%&&&&@@@&%#(//**,,.......... . ......,,,,,,,,*/%&&#%&###%((/((//.....................................................................\n" +
                ".................,/(##%#%###%%@&%%%##(((///**,,,.,.....,*******,,,,,,,,,/%&&&%%###(#(##(**.....................................................................\n" +
                ".................*,(#%#%%%#%%&@&%%%&&&%%&&&%%#/*,,,,*/#%%%%#(//////*,,,,/#%%%%##((////(/,*.....................................................................\n" +
                "................../((#(((#%%&%&%#%%%%%%#%%%(#&%#*,.,*//(####%%#((/**,,,,/#%%###((/(((//,.......................................................................\n" +
                "..................,/,/(//#%#%&%###%%&&#////* /##/..,,,,,*.,(/.,//*,,,,,*(#%######((((*,........................................................................\n" +
                "...................,(***/#(##%#((#(((##((/****((/,.,,,.,*//****,...,,,,*(%%##%#((////...............    .......................................................\n" +
                ".......................,.,/(%#%%((((/*****,,,/((/...,,.............,,,,*/##((((((//,........                ...................................................\n" +
                ".........................,*(#%%#(((/**,.....,(#(/. .,,,.        ....,,,*///****////...                       .. ...............................................\n" +
                "..........................//#%%((((/**,.....*(((/, .,,,..       ....,,,*#((****///,....                       .................................................\n" +
                "..........................*(#%%#(*((/**,,,,,(###/, .,,,,,*,...  ......,(##((#(//(/,.. ...                    ............   ..*................................\n" +
                "..,,...............,,*,.,*./%%%&#*/#(/*,,,,(%#((/,. .,,,,.*/,,...,,....  (##(((((*..          ..........................//*/##*/.* ............................\n" +
                ".,**.,/*........, ....../(##%#%#(,*(#(/***/#####/*,,,*,,..,,/*,,.,,.... .%###(((/*.          .........................*. ,......,. ............................\n" +
                "........................,,(/*###((**##(/*/#####%%%(//*,,,,,,,*/,,,,,,,..#&%%%%#(/*..*.,*,,............,***............ ...........  ...........................\n" +
                "///*/////**///*****,,,,......,*(##/*/##//(####(//*,,*,,,,****,,,,,,,,,,/%%####((/*,,,*,../,...,.......,***..,,*,...,... ..........,/....................,/*.,**\n" +
                "//( %##*/***//((((//(//, *//*,...**,/(##/**/&%#((/*,*//**,,,**,,,,****,*&######///*****((,/////(//#(*///*///*****,*,,  /. ......./, ...//*.......,****,/////***\n" +
                "(/%##&&(****(((((((/,.,* ,///**,*****(#%%/***/(/*,......,,.,,*****//**. &##%#((/////,/,,,**////##*%&////*///**,**(((.,,.(,/(/*.//, ,////*/////////****///#*.../\n" +
                ",,*/(((/(/*/(/(((#(#(((/..////,,**(%%.#%%%(/*/(#%###((/*,,,,,,**////*.  %&&%*,*****/*,**..*//,.,/*,,///(/(//(//*,,,,/ .///(/(/.,////////*//////////*(((((..*((,\n" +
                ",,,,*/((((,((((((((((##/..////*#%%&&(.*#%%%#/**/////***,,,,,,***//*,.   *&%%#/*/////(/*,/**/,.,,,,. .////////*//**.**,./(/////*,//////(((/****,/(//*/(#(#######\n" +
                ",,,,,*/(((*((((((((((((/..*(%%%%%&&&*..,#%&%#/**,,,,,....,,,,**//*,      %%%#(//////////*///.,,.,.....*//////*/,((,,, *((((/. .,*//(//////((****/(*((/...,(###(\n" +
                ",,,,***/((((((((((((((((#%%%%%%&&&&&*..../%&&#(/*,,,,,,,,,,,**/*,.       %%%#((((((////,*//**.,,,.,.*,,,((((/**,.*.. */((((**,/*(((//((/((/*/***/##((((((((((#(\n" +
                "/*,*****/(((((((((((%%%%%%%%%&&&&&@%*.....,#%%%##(/*******///*,         *%%%#(((((((((/,**/,/,..... ./*.,(((/&/(,,,.(/((((((%%%%(((#////*////*//(###((((((//(((\n" +
                "((/***///(((((((//(%&&&&&%%&&&/*/,*(*,......,%%###%%%%%#/***,         .%%%%%%#(((((/((//(*/,//,,..,,,((,,/(((%@&%/%#.((((####%%#((%%,..*##(((*((/**,,*((.....,(\n" +
                "(((//////(((/*(/######(####%%//*,,,.,,***,....,#(///******.         ,/(#%%%%%##(#((((##(((/,,&%%((/////#%%&(%(&%%#%%######*,**/(%%((#/./%/#(#/*//////*,,*#%%%%%\n" +
                "(((((((((%%/*%%%%#####%&&&@@(/**//(%#****((/.    ,**/**         .*****/%%%%%%%%###########(/,.......,,/%%%@%##(%@@%%%%##%((/*(##%&&//*,,(@#/((##/,....***((###(\n" +
                "((((((((#&&%#(/((&&&&&@@@@@(#%#/,,../&%(**(#(#,    /. .**/**////****,,/%%&%%%%%%#%#####%%%%(//*,.....&%%%%@&%%#(#@@%#&//,(&#/%#%&#&#*,,,((*//(&(,,,,..,(/((####\n" +
                "((((((((%%%%&&&&&##%&&@@@@@(,,,(%%(*.,*#&#(///****,.*#****/////**,**,.*&&&&%&%%%%%%%%%#%#%%#((((*/*..(%%%&@@%&&%(#(%%%&*,.....%%&/.,,*,**/((*#(///.., .(*((####\n" +
                "(((((((%%%%%%%&&&%(%&&&@@@@&/,.,,,,,/%&#*,/(,*..,,.*#///((####((((/,,./&&&&&&%%%%%%%%######%%#/#%(/((//##@@@@&%&&%%%#%%**,/(*(#((###,,#/.(##(%&#,,(,,*./(######\n" +
                "((((((#%%%%%%%#(#((%&&&&@@@@/,...,,,,,(/*,.,(##%((%%(&%//(((///((#,..,*&&&&&&%%%%%%%%%%&&&%%%%(/%&%###(/**(&&&%######&@@@@&&%####(##((((((((((%%#*/*,./@#####(#\n" +
                "((((((%%%#(/((((%%%%%%&&&&@@&/,.,,***//*,,*//#%#&@&@%(&#%#*,.,/%/....%&&&&&%%%%%%((//(#(((((#((((&&&&%%##((/**((####(((#&%,%((((#####((#((((###%%@&#%@@@&%#&(#&\n" +
                "(((((((#(/##%%%%%%%%%%%&&&@@@#/,....,.**(&/(//***&&&&&#(/**/,,,,,../&&&&%%%%%%%%%%((&%&&%&&%%&&&&&&&&&&&&%%#%%##(//((#((((/////((######(((###%&&&@@@@&&%%%%%##%\n" +
                "/((((/((#%%%%%%%##%%%%%%&&&&@&/*,,,*////&&#/**,,*#%&%%##((////**,,*&&&&&%%%%%%%%%%%(#(&&&&&&&&&&&&&&&&&&&&%&&&&&%#%(/(#((/(/*(/(((#####(#((#&%&&&&&&&%%%%%%%%##\n" +
                "/(((#%%%%%%%%%%%##%%%%%%%&&&&@%/,*,,...,#%%(**.,*(/*@##%%#/****,,*&&&&&&%%%%%%%%%%%&%(#/%&&&&&&&&&&&&&&&&&&&&&&&&&%#((##(((((((((##########%&&&&%%%%%%%%%%&&&&%\n" +
                "(((#%%%%%%%%%%%%##%%%%%%%&&&&&%*,,,**(((/%%%*.,,.,#,*%#(/(%%#*,,,&&&&&&&%%%%%%%%%%%&&&###(#&&&&&&&&&&&&&&&&&&&&&&&&%#(#%##((,((##(#########&&@@@&&&%%%%%%%&@@&&\n" +
                "(((%%%%%%%%%%%%%#%#%%%%%%&&&&&@&%//****//(&(***,../**,%%(*,,**#/**&&&&&&%%%%%%%%%%%%&&&&%##(#(%&&&&&&&&&&&&&&&&&&&&%%#(&##(((((#%&#########&&&@@@@@&&&&&&&&&@@&");
        Main main = new Main();
        OompaLoompaSong oompaLoompaSong = new OompaLoompaSong(5);
        System.out.println(oompaLoompaSong.sing());

        main.makeBeing(40);
        main.makeProd(20);
        getDate();
        main.ruufleIt(5);

        for (int i = 0; i < productList.size(); i++) {
            if (productList.get(i).getPrizeticket() != null) {
                winningCodesList.add(productList.get(i).getBarcode());
            }
        }
    }
            char[] alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
            public String[] prodDes = {"Alma", "Armud", "Heyva", "Nar"};
            public String[] names = {"Salam", "Sagol", "Lucy", "Fred", "Osman", "Peter", "Mark", "Louise", "Patricia"};
            public String[] cities = {"Baku", "Visegrad", "Debrecen", "Sopron", "Pecs", "Amsterdam"};

            public static ArrayList<Being> beingList = new ArrayList<>();
            public static ArrayList<Product> productList = new ArrayList<>();
            public static ArrayList<GoldenTicket> goldenTicketList = new ArrayList<>();
            public static ArrayList<Long> winningCodesList = new ArrayList<Long>();
            public static ArrayList<String> userCodeList = new ArrayList<>();
            public static ArrayList <Product> boo;
            public static ArrayList <Integer> indicies = new ArrayList<>();



    public void makeProd(int num) {
                Random number = new Random();
                String serialNum;
                for (int i = 0; i < num; i++) {
                    int barCode = 100 + number.nextInt(3);
                    serialNum = String.valueOf(alphabet[number.nextInt(24)]) +
                            String.valueOf(alphabet[number.nextInt(24)]) +
                            String.valueOf(alphabet[number.nextInt(24)]) +
                            String.valueOf(alphabet[number.nextInt(24)]) +
                            String.valueOf(alphabet[number.nextInt(24)]);
                    productList.add(new Product(prodDes[barCode - 100], barCode, serialNum, null));

                }
            }

            public static Date getDate() {
                Calendar cal = Calendar.getInstance();
                Date date = cal.getTime();
                return date;
            }

            public void ruufleIt(int num) {
                Random number = new Random();
                for (int i = 0; i < num; i++) {
                    String code = String.valueOf(number.nextInt(100) + number.nextInt(100));
                    goldenTicketList.add(new GoldenTicket(code, getDate()));
                }

                for (int i = 0; i < goldenTicketList.size(); i++) {
                    productList.get(number.nextInt(productList.size())).setPrizeticket(goldenTicketList.get(i));
                }
            }

        public void regSales(String userCode, long barCode){
            boo = new ArrayList<>();
            for (int i = 0; i <productList.size() ; i++) {
                if (productList.get(i).getBarcode() == barCode){
                    for (int j = 0; j <userCodeList.size() ; j++) {
                        if( beingList.get(j).getClass().equals(Kid.class) ){
                            if (userCodeList.get(j).equals(userCode)){
                                boo.add(productList.get(i));
                                ((Kid)beingList.get(indicies.get(j))).setProductList(boo);
                                productList.remove(i);
                            }
                        }
                    }
                }
            }

        }


    public void winnersList() {
                for (int i = 0; i < beingList.size(); i++) {
                    if (beingList.get(i).getClass().equals(Kid.class)) {
                        if (((Kid) beingList.get(i)).productList.size() == 0) {
                            System.out.println(beingList.get(i).getName());
                        }
                    }
                }
            }

    public void makeBeing(int num){
        Random number = new Random();
        for (int i = 0; i <num ; i++) {
            String code = String.valueOf(i);
            int height=number.nextInt(50)+100;
            String birthDay = String.valueOf(number.nextInt(30))+"/"+String.valueOf(number.nextInt(12))+"/"+String.valueOf(2000+number.nextInt(18));
            if (number.nextInt(100) %2==0){
                beingList.add(new Kid(code,birthDay,names[number.nextInt(8)],null,cities[number.nextInt(5)]));
                userCodeList.add(code);
            }else {
                beingList.add(new OompaLoompa(code,"lil "+names[number.nextInt(8)],height,cities[number.nextInt(5)]));
            }

        }
    }
    }